
태양흑점 분석한 내용 숙지

TDC git
태양흑점 수업 내용 코드 숙지
exercise 에서 기온 예측 문제도 봐두기
TensorFlow tutorial 에 나오는것은 좀 달라보임.. 이거는 skip..

태양 흑점 분석
https://teddylee777.github.io/tensorflow/dataset-batch-window

일단 보관.. 볼필요는 없을듯
https://medium.com/analytics-vidhya/time-series-forecasting-using-tensorflow-rkt109-ea858d8e49c6
https://github.com/aryan109/Sunspot_Prediction/blob/master/Sunspot_prediction.ipynb



불러온 데이터
['0', '1749-01-31', '96.7']
['1', '1749-02-28', '104.3']
['2', '1749-03-31', '116.7']
['3', '1749-04-30', '92.8']
['4', '1749-05-31', '141.7']
['5', '1749-06-30', '139.2']

흑점 개수 부분만 갖고 온다
train_data[:5]
[96.7, 104.3, 116.7, 92.8, 141.7]

넘파이로 바꿔주고
train_data = np.asarray(train_data)
train_data.shape
(3235,)

차원 늘려주고
train_data = np.expand_dims(train_data, 1)
train_data.shape
(3235, 1)

tensor slice 로 변환
dataset = tf.data.Dataset.from_tensor_slices(train_data)
tf.Tensor([96.7], shape=(1,), dtype=float64)
tf.Tensor([104.3], shape=(1,), dtype=float64)
tf.Tensor([116.7], shape=(1,), dtype=float64)
tf.Tensor([92.8], shape=(1,), dtype=float64)
tf.Tensor([141.7], shape=(1,), dtype=float64)
tf.Tensor([139.2], shape=(1,), dtype=float64)

window size 만큼씩 묶어준다
ex) 20일 데이터를 기반으로 21일째를 예측하고 싶으면 21 로 한다.
20(train data), 1(label data)
window_size=20 + 1
dataset = dataset.window(window_size, shift=1, drop_remainder=True)

배치별로 flat 하게 shape 을 펼쳐준다.
dataset = dataset.flat_map(lambda w: w.batch(window_size + 1))

데이터 2개 확인
for data in dataset.take(2):
    print(data)
tf.Tensor(
[[ 96.7]
 [104.3]
 [116.7]
 [ 92.8]
 [141.7]
 [139.2]
 [158. ]
 [110.5]
 [126.5]
 [125.8]
 [264.3]
 [142. ]
 [122.2]
 [126.5]
 [148.7]
 [147.2]
 [150. ]
 [166.7]
 [142.3]
 [171.7]
 [152. ]], shape=(21, 1), dtype=float64)
tf.Tensor(
[[104.3]
 [116.7]
 [ 92.8]
 [141.7]
 [139.2]
 [158. ]
 [110.5]
 [126.5]
 [125.8]
 [264.3]
 [142. ]
 [122.2]
 [126.5]
 [148.7]
 [147.2]
 [150. ]
 [166.7]
 [142.3]
 [171.7]
 [152. ]
 [109.5]], shape=(21, 1), dtype=float64)


 배치별로 shuffle (buffer_size = 500 임의로 설정)
 dataset = dataset.shuffle(500)

train/label로 섞인 batch를 train (20개), label (1개)로 분리 (tuple 형태로 분리)
dataset = dataset.map(lambda x: (x[:-1], x[-1:]))
for train, label in dataset.take(2):
    print('train: {}'.format(train))
    print('label: {}'.format(label))
train: [[276.2]
 [196.7]
 [241.7]
 [233.3]
 [189.5]
 [238.3]
 [186.7]
 [185. ]
 [206.7]
 [190. ]
 [183.3]
 [116.7]
 [163.3]
 [163.3]
 [158.3]
 [178.7]
 [146.7]
 [143.3]
 [143.3]
 [156.2]]
label: [[128.3]]
train: [[ 97.8]
 [164.5]
 [124.5]
 [ 88.3]
 [113.8]
 [174.5]
 [162.8]
 [122.5]
 [110. ]
 [ 85. ]
 [ 45.5]
 [111.7]
 [ 58.7]
 [ 90. ]
 [ 62.5]
 [ 61.7]
 [ 68.3]
 [ 90.5]
 [ 63.3]
 [ 61.7]]
label: [[73.3]]

for d in dataset.batch(10).take(2):
    print(d)
(<tf.Tensor: shape=(10, 20, 1), dtype=float64, numpy=
array([[[223.3],
        [225.8],
        [171.7],
        [212.5],
        [160.5],
        [156.7],
        [155. ],
        [151.7],
        [115.5],
        [145. ],
        [128.8],
        [140.5],
        [136.7],
        [123.3],
        [121.2],
        [103.3],
        [123.3],
        [128.7],
        [122.8],
        [107. ]],

       [[ 78. ],
        [109. ],
        [ 92.8],
        [ 73. ],
        [ 85.5],
        [ 47.5],
        [ 29.2],
        [ 11. ],
        [ 13.2],
        [ 23.3],
        [ 29.5],
        [ 20.3],
        [  7.3],
        [  0. ],
        [ 19.3],
        [ 18.7],
        [  6.5],
        [ 20.5],
        [  1.7],
        [ 13.2]],

        ...
        ...

       [[185.8],
        [187.2],
        [193.3],
        [187.8],
        [224.5],
        [176.7],
        [145.7],
        [212. ],
        [224.7],
        [165.3],
        [213.3],
        [228.7],
        [262.2],
        [261.7],
        [235.8],
        [290. ],
        [230. ],
        [215.3],
        [238.8],
        [180.8]]])>, <tf.Tensor: shape=(10, 1, 1), dtype=float64, numpy=
array([[[146.7]],
       [[ 60.8]],
       [[143.3]],
       [[187.8]],
       [[  6.5]],
       [[ 58.3]],
       [[ 19.3]],
       [[ 63.3]],
       [[185.8]],
       [[188.3]]])>)






