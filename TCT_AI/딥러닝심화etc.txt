1. gan
2. 강화학습
3. 딥러닝개발 simulation
4. 실용적 방법론
5. 딥러닝 응용 시스템 구축
6. 딥러닝 vs rule based 전통적 머신러닝 방식
7. GCP 활용
8. multilabeling classification
9. model/data parallelism
= = = = = = = = = = = = = = = = = = =
 = = = = = = = = = = = = = = = = = =
= = = = = = = = = = = = = = = = = = =


gan

토마토 이미지를 만드는 gan 모델이 있다
generator 는 실제 토마토 이미지들의 분포를 학습하는것을 목표함.
discriminator 는 진짜 토모토와 가짜 생성된 토마토 이미지를 구분하는것을 목표함. 토마토의 존재 여부 구분이 목표가 아님.
gan 모델 학습하면 discriminator loss 는 일정한 값에 수렴함.
generator 는 가상의 토마토 이미지를 생성함.
generator 와 discriminator 의 cost 값은 상호간의 parameter 에 대해 의존성이 있음.



강화학습




딥러닝개발 simulation

1. 데이터준비
데이터셋의 양불 비율을 생산공정과 동일하게 유지하면 x
비대칭 데이터는 다수 클래스 데이터에서 언더샘플링이나 
소수 클래스 데이터를 오버샘플링하여 데이터 비율을 비슷하게 맞춰준다.
학습 및 검증 데이터셋은 비슷한 비율로하고
테스트 데이터셋은 실제 현장의 비율로 해야한다.

2. 성능 지표 정의
비대칭 데이터셋으로 테스트를 진행했기 때문에
높은 accuracy 가 판정의 정확성을 보장하지 않는다.
confusion matrix 를 통해 불량품 판정에 대한 recall 과
양품 판정에 대한 precision 으로 모델 성능을 평가해야 한다.

3. 신경망 모델 선정
무조건 깊은 구조의 모델 -> 오버피팅 가능성이 있고
더 많은 데이터, 학습 시간, 자원을 요구하기 때문에
최소 비용 요구 조건을 충족하지 못함.
작고 단순한 모델에서 시작하여 순차적으로 capacity 높은 모델을 시도한다.




실용적 방법론

- 실제 데이터를 많이 모아서 학습에 사용하면 심층신경망모델을 일반화 할수 있다
- 특정 데이터에 좋은 성능을 보인 모델을 활용하여 새로운 도메인의 데이터로 학습 시키고자 할 때 기존 학습때 사용했던 방법들 (ex학습률감소, ...) 적용하면 좋다? no. 도메인이 바뀌면 보장할 수 없다.
- 하이퍼파라미터 튜닝에서 그리드 탐색보다 무작위 탐색이 불필요한 반복 횟수를 줄일 수 있다. (더빨리 찾을수 있다)
- 데이터 대비 모델의 capacity 가 높으면 오버피팅이 발생할수 있다. early stopping 이 대안이 될 수 있다.





딥러닝 응용 시스템 구축

응용시스템(로컬판정), 학습플랫폼 다이어그램 그리기

학습플랫폼 프로세스 다이어그램
1. 데이터 전처리 : 데이터검증, 클린징, 증폭 등 전처리
2. 모델 학습 : architecture 선정, 최적 hyperparameter 탐색, ...
3. 모델 평가 및 선정 : 검증 데이터로 모델 평가 및 최고 성능 모델 선정
4. 모델 관리 : 모델 이력 및 생명주기 관리, 응용시스템으로 배포



딥러닝 vs rule based 전통적 머신러닝 방식

1. 데이터 차원 또는 feature 가 고차원 데이터이거나 고차원 특징이 있는 경우
딥러닝이 전통적 머신러닝 방식보다 잘한다
반대로 간단한 경우 rule based 머신러닝이 잘할수 있다
2. 이유 : 딥러닝의 심층 신경망 모델은 단계별 은닉층이 깊을수록 고차원 데이터의 잠재적 특징을 포착하여 고도로 추상화된 표현을 할 수 있기 때문임.




GCP 활용
내장 카메라를 이용하여 (VISION) 시각 장애인에게 종이로 인쇄된 메뉴판을 읽어주는 (OCR API, TTS API) 휴대폰 어플.
브라우저로 전송되는 이미지가 유해할 경우 (유해성 콘텐츠 감지 API) 화면에 표시하기 전에 차단.
수신된 email 의 작성언어가 영어인경우 (언어감지API) 자동으로 한국어로 번역 (텍스트번역 API) 프로그램
온라인 쇼핑몰의 제품 후기에 불만이 (감정분석API) 등록되면 알림을 줌.


multilabeling classification 을 위해 코드 어디를 수정해야되는지?
optimizaer, activation, 등이 보기에 있음.
답 : 아웃풋 레이어의 activation function 을 softmax 로 하면 1개만 나오니까 아웃풋에 따라 각각의 확률값을 주는 sigmoid 를 써줘야한다.



분산학습
model/data parallelism


1. model parallelism
(1) 레이어 분할
레이어 각각 컴퓨터로 분할되고 계산된 결과가 네트워크로 다른 컴퓨터로 이동시켜서 계속 계산됨. 네트워크 성능 중요.
(2) 학습 피처 분할
레이어 말고 계산 피처 기준으로 분할
(3) 혼합형 분할
위 둘 혼합.
-> 순서를 기다려야함. 비동기적으로 처리 불가능.
데이터 병렬처리보다 네트워크 부하가 큼

2. data parallelism
워커가 다수의 컴퓨터 각각에 데이터를 나눠 주고
각각 학습하며 얻은 gradient 값들이 워커로 모이고 취합됨.
-> 비동기적으로 처리 가능.


a model parallelism 인스턴스에 모델 레이어 별로 나눠서 학습?
b data parallelism 인스턴스 별로 마도 다른 미니 배치를 할당??
d 인스턴스 늘리는거보다 인스턴스 내 gpu 개수 늘리는게 더 좋다?
e 인스턴스 별로 모두 같은 미니 배치를 할당하면 스케쥴링 할 필요가 없다?

a,b 가 답?


https://blog.naver.com/PostView.nhn?isHttpsRedirect=true&blogId=freepsw&logNo=221807767095&parentCategoryNo=&categoryNo=54&viewDate=&isShowPopularPosts=false&from=postView





subnetwork 모델 만드는 문제

transfer learning 문제

weight 값 get_weight 였나 해서 값 얻어서 feature mape 특성 살펴보기


데이터 제너레이터 사용법 자세히 보기